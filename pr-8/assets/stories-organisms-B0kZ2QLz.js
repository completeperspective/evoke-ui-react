import{j as e,r as n,n as t}from"../vite-inject-mocker-entry.js";import{M as s,a,b as o,c as i,D as l,A as r,d as c,e as d,f as p,g as h,S as m,h as u,i as x,j as g,u as v,k as j}from"./components-organisms-DtBsnb7O.js";import{B as f,I as y,L as C}from"./components-atoms-DvepWBK6.js";import{F as b}from"./components-molecules-wdkL-Srs.js";import"./shared-utils-DYNBUXX4.js";const S={title:"Organisms/Modal System",component:s,parameters:{layout:"centered",docs:{description:{component:"\n# Modal/Dialog System\n\nA comprehensive modal system built on Radix UI Dialog primitives with CVA-first architecture. \nIncludes Modal, Dialog, AlertDialog, Drawer, and Sheet components with advanced features:\n\n- **Modal stacking** with z-index management\n- **Focus trapping** for accessibility\n- **Scroll locking** to prevent body scroll\n- **Responsive breakpoints** for mobile/desktop behavior\n- **Animation system** with reduced motion support\n- **CVA variants** for comprehensive styling control\n\n## Components\n\n- **Modal**: Base modal container with overlay and content\n- **Dialog**: Standard dialog with header, body, footer\n- **AlertDialog**: Confirmation and alert dialogs\n- **Drawer**: Mobile-responsive slide-out drawer\n- **Sheet**: Side panel variant with enhanced styling\n\n## Advanced Features\n\nAll components include:\n- Full keyboard navigation support\n- Screen reader compatibility\n- Customizable animations\n- Mobile-responsive behavior\n- Theme-aware styling\n        "}}},tags:["autodocs"],argTypes:{open:{control:"boolean",description:"Whether the modal is open"}}};function N({children:t,...a}){const[o,i]=n.useState(!1);return e.jsxs("div",{className:"space-y-4",children:[e.jsx(f,{onClick:()=>i(!0),children:"Open Modal"}),e.jsx(s,{open:o,onOpenChange:i,...a,children:t})]})}const k={render:()=>e.jsx(N,{children:e.jsxs(a,{children:[e.jsx(o,{title:"Basic Modal",description:"This is a simple modal example."}),e.jsx("div",{className:"py-4",children:e.jsx("p",{children:"Modal content goes here. You can put any content inside this modal."})}),e.jsxs(i,{children:[e.jsx(f,{variant:"ghost",children:"Cancel"}),e.jsx(f,{children:"Confirm"})]})]})})},M={render:()=>e.jsx("div",{className:"grid grid-cols-2 gap-4 w-full max-w-4xl",children:["sm","md","lg","xl","2xl","3xl","full","fullscreen"].map(n=>e.jsx(N,{children:e.jsxs(a,{size:n,children:[e.jsx(o,{title:`${n.toUpperCase()} Modal`}),e.jsxs("div",{className:"py-4",children:[e.jsxs("p",{children:["This is a ",n," sized modal. The content adapts to the modal size."]}),"fullscreen"===n&&e.jsxs("div",{className:"mt-4",children:[e.jsx("p",{children:"Fullscreen modals take up the entire viewport."}),e.jsx("p",{children:"Perfect for complex forms or detailed content."})]})]}),e.jsx(i,{children:e.jsx(f,{variant:"ghost",children:"Close"})})]})},n))})},B={render:()=>e.jsx("div",{className:"flex gap-4",children:["center","top","bottom"].map(n=>e.jsx(N,{children:e.jsxs(a,{position:n,children:[e.jsx(o,{title:`${n} Position`}),e.jsx("div",{className:"py-4",children:e.jsxs("p",{children:["This modal is positioned at the ",n," of the screen."]})}),e.jsx(i,{children:e.jsx(f,{variant:"ghost",children:"Close"})})]})},n))})},D={render:()=>e.jsx(N,{children:e.jsxs(a,{scrollable:!0,maxHeight:"md",children:[e.jsx(o,{title:"Scrollable Content",description:"This modal has scrollable content."}),e.jsx("div",{className:"space-y-4",children:Array.from({length:20},(n,t)=>e.jsxs("div",{className:"p-4 border rounded",children:[e.jsxs("h3",{className:"font-semibold",children:["Section ",t+1]}),e.jsx("p",{children:"This is some content that makes the modal scrollable. Lorem ipsum dolor sit amet, consectetur adipiscing elit."})]},t))}),e.jsxs(i,{children:[e.jsx(f,{variant:"ghost",children:"Cancel"}),e.jsx(f,{children:"Save"})]})]})})},O={render:()=>{const[t,s]=n.useState(!1),[a,o]=n.useState(!1),[i,r]=n.useState(!1);return e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{className:"flex gap-4",children:[e.jsx(f,{onClick:()=>s(!0),children:"Confirmation Dialog"}),e.jsx(f,{onClick:()=>o(!0),children:"Form Dialog"}),e.jsx(f,{onClick:()=>r(!0),children:"Info Dialog"})]}),e.jsx(l,{type:"confirmation",title:"Delete Item",description:"Are you sure you want to delete this item? This action cannot be undone.",primaryAction:e.jsx(f,{variant:"destructive",children:"Delete"}),secondaryAction:e.jsx(f,{variant:"ghost",children:"Cancel"}),open:t,onOpenChange:s}),e.jsx(l,{type:"form",title:"Create User",primaryAction:e.jsx(f,{children:"Create"}),secondaryAction:e.jsx(f,{variant:"ghost",children:"Cancel"}),open:a,onOpenChange:o,children:e.jsxs("div",{className:"space-y-4",children:[e.jsx(b,{label:"Name",children:e.jsx(y,{placeholder:"Enter name"})}),e.jsx(b,{label:"Email",children:e.jsx(y,{type:"email",placeholder:"Enter email"})})]})}),e.jsx(l,{type:"informational",intent:"success",title:"Success",description:"Your changes have been saved successfully.",primaryAction:e.jsx(f,{children:"Continue"}),open:i,onOpenChange:r})]})}},w={render:()=>e.jsx("div",{className:"space-y-4",children:e.jsxs("div",{className:"flex gap-4",children:[e.jsx(r,{intent:"danger",title:"Delete Account",description:"This will permanently delete your account and all associated data. This action cannot be undone.",actionText:"Delete Account",actionProps:{variant:"destructive"},cancelText:"Cancel",trigger:e.jsx(f,{variant:"destructive",children:"Delete Account"}),onAction:()=>{}}),e.jsx(r,{intent:"warning",title:"Unsaved Changes",description:"You have unsaved changes. Are you sure you want to leave without saving?",actionText:"Leave Without Saving",actionProps:{variant:"destructive"},cancelText:"Stay",trigger:e.jsx(f,{variant:"ghost",children:"Leave Page"}),onAction:()=>{}}),e.jsx(r,{intent:"info",title:"Update Available",description:"A new version of the application is available. Would you like to update now?",actionText:"Update Now",cancelText:"Later",trigger:e.jsx(f,{children:"Check for Updates"}),onAction:()=>{}})]})})},F={render:()=>{const[t,s]=n.useState(!1),[a,o]=n.useState(!1),[i,l]=n.useState(!1);return e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{className:"flex gap-4",children:[e.jsx(f,{onClick:()=>s(!0),children:"Right Drawer"}),e.jsx(f,{onClick:()=>o(!0),children:"Left Drawer"}),e.jsx(f,{onClick:()=>l(!0),children:"Bottom Drawer"})]}),e.jsx(c,{side:"right",open:t,onOpenChange:s,children:e.jsxs(d,{children:[e.jsx(p,{title:"Settings"}),e.jsx("div",{className:"flex-1 py-4",children:e.jsx("p",{children:"Settings content goes here."})}),e.jsxs(h,{children:[e.jsx(f,{variant:"ghost",children:"Cancel"}),e.jsx(f,{children:"Save"})]})]})}),e.jsx(c,{side:"left",size:"sm",open:a,onOpenChange:o,children:e.jsxs(d,{showCloseButton:!1,children:[e.jsx(p,{title:"Navigation",border:!1}),e.jsx("nav",{className:"flex-1",children:e.jsxs("ul",{className:"space-y-2",children:[e.jsx("li",{children:e.jsx("a",{href:"#",className:"block p-2 hover:bg-accent rounded",children:"Home"})}),e.jsx("li",{children:e.jsx("a",{href:"#",className:"block p-2 hover:bg-accent rounded",children:"About"})}),e.jsx("li",{children:e.jsx("a",{href:"#",className:"block p-2 hover:bg-accent rounded",children:"Contact"})})]})})]})}),e.jsx(c,{side:"bottom",size:"lg",open:i,onOpenChange:l,children:e.jsxs(d,{children:[e.jsx(p,{title:"Filters"}),e.jsx("div",{className:"py-4",children:e.jsx("p",{children:"Filter options go here."})}),e.jsxs(h,{children:[e.jsx(f,{variant:"ghost",children:"Clear"}),e.jsx(f,{children:"Apply"})]})]})})]})}},A={render:()=>{const[t,s]=n.useState(!1),[a,o]=n.useState(!1),[i,l]=n.useState(!1);return e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{className:"flex gap-4",children:[e.jsx(f,{onClick:()=>s(!0),children:"Default Sheet"}),e.jsx(f,{onClick:()=>o(!0),children:"Ghost Sheet"}),e.jsx(f,{onClick:()=>l(!0),children:"Outline Sheet"})]}),e.jsx(m,{open:t,onOpenChange:s,children:e.jsxs(u,{children:[e.jsx(x,{title:"User Profile",divider:!0}),e.jsxs("div",{className:"space-y-4",children:[e.jsx(b,{label:"Name",children:e.jsx(y,{defaultValue:"John Doe"})}),e.jsx(b,{label:"Email",children:e.jsx(y,{type:"email",defaultValue:"john@example.com"})})]}),e.jsxs(g,{divider:!0,sticky:!0,children:[e.jsx(f,{variant:"ghost",children:"Cancel"}),e.jsx(f,{children:"Save"})]})]})}),e.jsx(m,{variant:"ghost",side:"left",sheetSize:"sm",open:a,onOpenChange:o,children:e.jsxs(u,{padding:"none",children:[e.jsx(x,{title:"Navigation"}),e.jsx("nav",{className:"flex-1 px-4",children:e.jsxs("ul",{className:"space-y-2",children:[e.jsx("li",{children:e.jsx("a",{href:"#",className:"block p-2 hover:bg-accent rounded",children:"Dashboard"})}),e.jsx("li",{children:e.jsx("a",{href:"#",className:"block p-2 hover:bg-accent rounded",children:"Analytics"})}),e.jsx("li",{children:e.jsx("a",{href:"#",className:"block p-2 hover:bg-accent rounded",children:"Settings"})})]})})]})}),e.jsx(m,{variant:"outline",side:"right",sheetSize:"lg",open:i,onOpenChange:l,children:e.jsxs(u,{spacing:"relaxed",children:[e.jsx(x,{title:"Advanced Settings",description:"Configure advanced application preferences",divider:!0}),e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{children:[e.jsx("h3",{className:"font-semibold mb-2",children:"Appearance"}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(C,{children:"Theme"}),e.jsxs("div",{className:"flex gap-2",children:[e.jsx(f,{size:"sm",variant:"outline",children:"Light"}),e.jsx(f,{size:"sm",variant:"outline",children:"Dark"}),e.jsx(f,{size:"sm",variant:"outline",children:"Auto"})]})]})]}),e.jsxs("div",{children:[e.jsx("h3",{className:"font-semibold mb-2",children:"Notifications"}),e.jsxs("div",{className:"space-y-2",children:[e.jsxs(C,{children:[e.jsx("input",{type:"checkbox",className:"mr-2"}),"Email notifications"]}),e.jsxs(C,{children:[e.jsx("input",{type:"checkbox",className:"mr-2"}),"Push notifications"]})]})]})]}),e.jsxs(g,{align:"between",sticky:!0,children:[e.jsx(f,{variant:"ghost",children:"Reset to Defaults"}),e.jsxs("div",{className:"space-x-2",children:[e.jsx(f,{variant:"ghost",children:"Cancel"}),e.jsx(f,{children:"Apply"})]})]})]})})]})}},T={render:()=>{function l(){const[l,r]=n.useState({}),{registerModal:c,unregisterModal:d,getZIndex:p,stack:h}=j({debug:!0}),m=e=>{r(n=>({...n,[e]:!0}))},u=e=>{r(n=>({...n,[e]:!1})),d(e)};return t.useEffect(()=>{Object.entries(l).forEach(([e,n])=>{n&&c(e,{title:`Modal ${e}`,onClose:()=>u(e)})})},[l]),e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{className:"flex gap-2",children:[e.jsx(f,{onClick:()=>m("1"),children:"Open Modal 1"}),e.jsx(f,{onClick:()=>m("2"),children:"Open Modal 2"}),e.jsx(f,{onClick:()=>m("3"),children:"Open Modal 3"})]}),e.jsxs("div",{className:"text-sm text-muted-foreground",children:["Stack count: ",h.length]}),["1","2","3"].map(n=>e.jsx(s,{open:l[n],onOpenChange:e=>!e&&u(n),children:e.jsxs(a,{size:"sm",style:{zIndex:p(n)},children:[e.jsx(o,{title:`Modal ${n}`}),e.jsxs("div",{className:"py-4",children:[e.jsxs("p",{children:["This is modal ",n,". Z-index: ",p(n)]}),e.jsx("p",{children:"You can open multiple modals and they will stack properly."}),e.jsx("div",{className:"mt-4",children:e.jsxs(f,{size:"sm",onClick:()=>m(String(parseInt(n)+1)),children:["Open Modal ",parseInt(n)+1]})})]}),e.jsx(i,{children:e.jsx(f,{variant:"ghost",onClick:()=>u(n),children:"Close"})})]})},n))]})}return e.jsx(l,{})}},z={render:()=>{const[t,l]=n.useState(!1);return v({enabled:t}),e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{children:[e.jsx(f,{onClick:()=>l(!0),children:"Open Accessible Modal"}),e.jsx("p",{className:"text-sm text-muted-foreground mt-2",children:"This modal demonstrates accessibility features:"}),e.jsxs("ul",{className:"text-sm text-muted-foreground list-disc list-inside mt-1",children:[e.jsx("li",{children:"Focus trapping with Tab/Shift+Tab"}),e.jsx("li",{children:"Escape key to close"}),e.jsx("li",{children:"Click outside to close"}),e.jsx("li",{children:"Screen reader support"}),e.jsx("li",{children:"Scroll locking"})]})]}),e.jsx(s,{open:t,onOpenChange:l,children:e.jsxs(a,{children:[e.jsx(o,{title:"Accessibility Demo",description:"Try using Tab, Shift+Tab, and Escape keys"}),e.jsxs("div",{className:"space-y-4",children:[e.jsx(b,{label:"First Input",children:e.jsx(y,{placeholder:"Focus starts here"})}),e.jsx(b,{label:"Second Input",children:e.jsx(y,{placeholder:"Tab to navigate"})}),e.jsx(b,{label:"Third Input",children:e.jsx(y,{placeholder:"Shift+Tab to go back"})})]}),e.jsxs(i,{children:[e.jsx(f,{variant:"ghost",children:"Cancel (Esc also works)"}),e.jsx(f,{children:"Confirm"})]})]})}),e.jsxs("div",{className:"h-screen bg-muted/20 rounded p-4",children:[e.jsx("p",{children:"Background content (scroll should be locked when modal is open)"}),Array.from({length:50},(n,t)=>e.jsxs("p",{children:["Scrollable content line ",t+1]},t))]})]})}};k.parameters={...k.parameters,docs:{...k.parameters?.docs,source:{originalSource:'{\n  render: () => <ModalDemo>\n      <ModalContent>\n        <ModalHeader title="Basic Modal" description="This is a simple modal example." />\n        <div className="py-4">\n          <p>Modal content goes here. You can put any content inside this modal.</p>\n        </div>\n        <ModalFooter>\n          <Button variant="ghost">Cancel</Button>\n          <Button>Confirm</Button>\n        </ModalFooter>\n      </ModalContent>\n    </ModalDemo>\n}',...k.parameters?.docs?.source},description:{story:"Basic Modal\nSimple modal with header, content, and footer",...k.parameters?.docs?.description}}},M.parameters={...M.parameters,docs:{...M.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const sizes = ['sm', 'md', 'lg', 'xl', '2xl', '3xl', 'full', 'fullscreen'] as const;\n    return <div className=\"grid grid-cols-2 gap-4 w-full max-w-4xl\">\n        {sizes.map(size => <ModalDemo key={size}>\n            <ModalContent size={size}>\n              <ModalHeader title={`${size.toUpperCase()} Modal`} />\n              <div className=\"py-4\">\n                <p>This is a {size} sized modal. The content adapts to the modal size.</p>\n                {size === 'fullscreen' && <div className=\"mt-4\">\n                    <p>Fullscreen modals take up the entire viewport.</p>\n                    <p>Perfect for complex forms or detailed content.</p>\n                  </div>}\n              </div>\n              <ModalFooter>\n                <Button variant=\"ghost\">Close</Button>\n              </ModalFooter>\n            </ModalContent>\n          </ModalDemo>)}\n      </div>;\n  }\n}",...M.parameters?.docs?.source},description:{story:"Modal Sizes\nDifferent modal sizes from small to fullscreen",...M.parameters?.docs?.description}}},B.parameters={...B.parameters,docs:{...B.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const positions = ['center', 'top', 'bottom'] as const;\n    return <div className=\"flex gap-4\">\n        {positions.map(position => <ModalDemo key={position}>\n            <ModalContent position={position}>\n              <ModalHeader title={`${position} Position`} />\n              <div className=\"py-4\">\n                <p>This modal is positioned at the {position} of the screen.</p>\n              </div>\n              <ModalFooter>\n                <Button variant=\"ghost\">Close</Button>\n              </ModalFooter>\n            </ModalContent>\n          </ModalDemo>)}\n      </div>;\n  }\n}",...B.parameters?.docs?.source},description:{story:"Modal Positions\nDifferent modal positions: center, top, bottom",...B.parameters?.docs?.description}}},D.parameters={...D.parameters,docs:{...D.parameters?.docs,source:{originalSource:'{\n  render: () => <ModalDemo>\n      <ModalContent scrollable maxHeight="md">\n        <ModalHeader title="Scrollable Content" description="This modal has scrollable content." />\n        <div className="space-y-4">\n          {Array.from({\n          length: 20\n        }, (_, i) => <div key={i} className="p-4 border rounded">\n              <h3 className="font-semibold">Section {i + 1}</h3>\n              <p>This is some content that makes the modal scrollable. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n            </div>)}\n        </div>\n        <ModalFooter>\n          <Button variant="ghost">Cancel</Button>\n          <Button>Save</Button>\n        </ModalFooter>\n      </ModalContent>\n    </ModalDemo>\n}',...D.parameters?.docs?.source},description:{story:"Scrollable Modal\nModal with scrollable content for long content",...D.parameters?.docs?.description}}},O.parameters={...O.parameters,docs:{...O.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [confirmOpen, setConfirmOpen] = useState(false);\n    const [formOpen, setFormOpen] = useState(false);\n    const [infoOpen, setInfoOpen] = useState(false);\n    return <div className="space-y-4">\n        <div className="flex gap-4">\n          <Button onClick={() => setConfirmOpen(true)}>Confirmation Dialog</Button>\n          <Button onClick={() => setFormOpen(true)}>Form Dialog</Button>\n          <Button onClick={() => setInfoOpen(true)}>Info Dialog</Button>\n        </div>\n        \n        <Dialog type="confirmation" title="Delete Item" description="Are you sure you want to delete this item? This action cannot be undone." primaryAction={<Button variant="destructive">Delete</Button>} secondaryAction={<Button variant="ghost">Cancel</Button>} open={confirmOpen} onOpenChange={setConfirmOpen} />\n        \n        <Dialog type="form" title="Create User" primaryAction={<Button>Create</Button>} secondaryAction={<Button variant="ghost">Cancel</Button>} open={formOpen} onOpenChange={setFormOpen}>\n          <div className="space-y-4">\n            <FormField label="Name">\n              <Input placeholder="Enter name" />\n            </FormField>\n            <FormField label="Email">\n              <Input type="email" placeholder="Enter email" />\n            </FormField>\n          </div>\n        </Dialog>\n        \n        <Dialog type="informational" intent="success" title="Success" description="Your changes have been saved successfully." primaryAction={<Button>Continue</Button>} open={infoOpen} onOpenChange={setInfoOpen} />\n      </div>;\n  }\n}',...O.parameters?.docs?.source},description:{story:"Dialog Component\nHigh-level dialog with predefined layouts",...O.parameters?.docs?.description}}},w.parameters={...w.parameters,docs:{...w.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="space-y-4">\n      <div className="flex gap-4">\n        <AlertDialog intent="danger" title="Delete Account" description="This will permanently delete your account and all associated data. This action cannot be undone." actionText="Delete Account" actionProps={{\n        variant: \'destructive\'\n      }} cancelText="Cancel" trigger={<Button variant="destructive">Delete Account</Button>} onAction={() => console.log(\'Account deleted\')} />\n        \n        <AlertDialog intent="warning" title="Unsaved Changes" description="You have unsaved changes. Are you sure you want to leave without saving?" actionText="Leave Without Saving" actionProps={{\n        variant: \'destructive\'\n      }} cancelText="Stay" trigger={<Button variant="ghost">Leave Page</Button>} onAction={() => console.log(\'Left without saving\')} />\n        \n        <AlertDialog intent="info" title="Update Available" description="A new version of the application is available. Would you like to update now?" actionText="Update Now" cancelText="Later" trigger={<Button>Check for Updates</Button>} onAction={() => console.log(\'Updating...\')} />\n      </div>\n    </div>\n}',...w.parameters?.docs?.source},description:{story:"Alert Dialog\nSpecialized confirmation dialogs",...w.parameters?.docs?.description}}},F.parameters={...F.parameters,docs:{...F.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [rightOpen, setRightOpen] = useState(false);\n    const [leftOpen, setLeftOpen] = useState(false);\n    const [bottomOpen, setBottomOpen] = useState(false);\n    return <div className="space-y-4">\n        <div className="flex gap-4">\n          <Button onClick={() => setRightOpen(true)}>Right Drawer</Button>\n          <Button onClick={() => setLeftOpen(true)}>Left Drawer</Button>\n          <Button onClick={() => setBottomOpen(true)}>Bottom Drawer</Button>\n        </div>\n        \n        <Drawer side="right" open={rightOpen} onOpenChange={setRightOpen}>\n          <DrawerContent>\n            <DrawerHeader title="Settings" />\n            <div className="flex-1 py-4">\n              <p>Settings content goes here.</p>\n            </div>\n            <DrawerFooter>\n              <Button variant="ghost">Cancel</Button>\n              <Button>Save</Button>\n            </DrawerFooter>\n          </DrawerContent>\n        </Drawer>\n        \n        <Drawer side="left" size="sm" open={leftOpen} onOpenChange={setLeftOpen}>\n          <DrawerContent showCloseButton={false}>\n            <DrawerHeader title="Navigation" border={false} />\n            <nav className="flex-1">\n              <ul className="space-y-2">\n                <li><a href="#" className="block p-2 hover:bg-accent rounded">Home</a></li>\n                <li><a href="#" className="block p-2 hover:bg-accent rounded">About</a></li>\n                <li><a href="#" className="block p-2 hover:bg-accent rounded">Contact</a></li>\n              </ul>\n            </nav>\n          </DrawerContent>\n        </Drawer>\n        \n        <Drawer side="bottom" size="lg" open={bottomOpen} onOpenChange={setBottomOpen}>\n          <DrawerContent>\n            <DrawerHeader title="Filters" />\n            <div className="py-4">\n              <p>Filter options go here.</p>\n            </div>\n            <DrawerFooter>\n              <Button variant="ghost">Clear</Button>\n              <Button>Apply</Button>\n            </DrawerFooter>\n          </DrawerContent>\n        </Drawer>\n      </div>;\n  }\n}',...F.parameters?.docs?.source},description:{story:"Drawer Component\nMobile-responsive slide-out drawers",...F.parameters?.docs?.description}}},A.parameters={...A.parameters,docs:{...A.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [defaultOpen, setDefaultOpen] = useState(false);\n    const [ghostOpen, setGhostOpen] = useState(false);\n    const [outlineOpen, setOutlineOpen] = useState(false);\n    return <div className="space-y-4">\n        <div className="flex gap-4">\n          <Button onClick={() => setDefaultOpen(true)}>Default Sheet</Button>\n          <Button onClick={() => setGhostOpen(true)}>Ghost Sheet</Button>\n          <Button onClick={() => setOutlineOpen(true)}>Outline Sheet</Button>\n        </div>\n        \n        <Sheet open={defaultOpen} onOpenChange={setDefaultOpen}>\n          <SheetContent>\n            <SheetHeader title="User Profile" divider />\n            <div className="space-y-4">\n              <FormField label="Name">\n                <Input defaultValue="John Doe" />\n              </FormField>\n              <FormField label="Email">\n                <Input type="email" defaultValue="john@example.com" />\n              </FormField>\n            </div>\n            <SheetFooter divider sticky>\n              <Button variant="ghost">Cancel</Button>\n              <Button>Save</Button>\n            </SheetFooter>\n          </SheetContent>\n        </Sheet>\n        \n        <Sheet variant="ghost" side="left" sheetSize="sm" open={ghostOpen} onOpenChange={setGhostOpen}>\n          <SheetContent padding="none">\n            <SheetHeader title="Navigation" />\n            <nav className="flex-1 px-4">\n              <ul className="space-y-2">\n                <li><a href="#" className="block p-2 hover:bg-accent rounded">Dashboard</a></li>\n                <li><a href="#" className="block p-2 hover:bg-accent rounded">Analytics</a></li>\n                <li><a href="#" className="block p-2 hover:bg-accent rounded">Settings</a></li>\n              </ul>\n            </nav>\n          </SheetContent>\n        </Sheet>\n        \n        <Sheet variant="outline" side="right" sheetSize="lg" open={outlineOpen} onOpenChange={setOutlineOpen}>\n          <SheetContent spacing="relaxed">\n            <SheetHeader title="Advanced Settings" description="Configure advanced application preferences" divider />\n            <div className="space-y-6">\n              <div>\n                <h3 className="font-semibold mb-2">Appearance</h3>\n                <div className="space-y-2">\n                  <Label>Theme</Label>\n                  <div className="flex gap-2">\n                    <Button size="sm" variant="outline">Light</Button>\n                    <Button size="sm" variant="outline">Dark</Button>\n                    <Button size="sm" variant="outline">Auto</Button>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <h3 className="font-semibold mb-2">Notifications</h3>\n                <div className="space-y-2">\n                  <Label>\n                    <input type="checkbox" className="mr-2" />\n                    Email notifications\n                  </Label>\n                  <Label>\n                    <input type="checkbox" className="mr-2" />\n                    Push notifications\n                  </Label>\n                </div>\n              </div>\n            </div>\n            <SheetFooter align="between" sticky>\n              <Button variant="ghost">Reset to Defaults</Button>\n              <div className="space-x-2">\n                <Button variant="ghost">Cancel</Button>\n                <Button>Apply</Button>\n              </div>\n            </SheetFooter>\n          </SheetContent>\n        </Sheet>\n      </div>;\n  }\n}',...A.parameters?.docs?.source},description:{story:"Sheet Component\nEnhanced side panels with styling variants",...A.parameters?.docs?.description}}},T.parameters={...T.parameters,docs:{...T.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    function StackingDemo() {\n      const [modals, setModals] = useState<{\n        [key: string]: boolean;\n      }>({});\n      const {\n        registerModal,\n        unregisterModal,\n        getZIndex,\n        stack\n      } = useModalStack({\n        debug: true\n      });\n      const openModal = (id: string) => {\n        setModals(prev => ({\n          ...prev,\n          [id]: true\n        }));\n      };\n      const closeModal = (id: string) => {\n        setModals(prev => ({\n          ...prev,\n          [id]: false\n        }));\n        unregisterModal(id);\n      };\n      React.useEffect(() => {\n        Object.entries(modals).forEach(([id, isOpen]) => {\n          if (isOpen) {\n            registerModal(id, {\n              title: `Modal ${id}`,\n              onClose: () => closeModal(id)\n            });\n          }\n        });\n      }, [modals]);\n      return <div className="space-y-4">\n          <div className="flex gap-2">\n            <Button onClick={() => openModal(\'1\')}>Open Modal 1</Button>\n            <Button onClick={() => openModal(\'2\')}>Open Modal 2</Button>\n            <Button onClick={() => openModal(\'3\')}>Open Modal 3</Button>\n          </div>\n          \n          <div className="text-sm text-muted-foreground">\n            Stack count: {stack.length}\n          </div>\n          \n          {[\'1\', \'2\', \'3\'].map(id => <Modal key={id} open={modals[id]} onOpenChange={open => !open && closeModal(id)}>\n              <ModalContent size="sm" style={{\n            zIndex: getZIndex(id)\n          }}>\n                <ModalHeader title={`Modal ${id}`} />\n                <div className="py-4">\n                  <p>This is modal {id}. Z-index: {getZIndex(id)}</p>\n                  <p>You can open multiple modals and they will stack properly.</p>\n                  <div className="mt-4">\n                    <Button size="sm" onClick={() => openModal(String(parseInt(id) + 1))}>\n                      Open Modal {parseInt(id) + 1}\n                    </Button>\n                  </div>\n                </div>\n                <ModalFooter>\n                  <Button variant="ghost" onClick={() => closeModal(id)}>\n                    Close\n                  </Button>\n                </ModalFooter>\n              </ModalContent>\n            </Modal>)}\n        </div>;\n    }\n    return <StackingDemo />;\n  }\n}',...T.parameters?.docs?.source},description:{story:"Modal Stacking\nDemonstration of modal stacking with z-index management",...T.parameters?.docs?.description}}},z.parameters={...z.parameters,docs:{...z.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [open, setOpen] = useState(false);\n    useScrollLock({\n      enabled: open\n    });\n    return <div className="space-y-4">\n        <div>\n          <Button onClick={() => setOpen(true)}>Open Accessible Modal</Button>\n          <p className="text-sm text-muted-foreground mt-2">\n            This modal demonstrates accessibility features:\n          </p>\n          <ul className="text-sm text-muted-foreground list-disc list-inside mt-1">\n            <li>Focus trapping with Tab/Shift+Tab</li>\n            <li>Escape key to close</li>\n            <li>Click outside to close</li>\n            <li>Screen reader support</li>\n            <li>Scroll locking</li>\n          </ul>\n        </div>\n        \n        <Modal open={open} onOpenChange={setOpen}>\n          <ModalContent>\n            <ModalHeader title="Accessibility Demo" description="Try using Tab, Shift+Tab, and Escape keys" />\n            <div className="space-y-4">\n              <FormField label="First Input">\n                <Input placeholder="Focus starts here" />\n              </FormField>\n              <FormField label="Second Input">\n                <Input placeholder="Tab to navigate" />\n              </FormField>\n              <FormField label="Third Input">\n                <Input placeholder="Shift+Tab to go back" />\n              </FormField>\n            </div>\n            <ModalFooter>\n              <Button variant="ghost">Cancel (Esc also works)</Button>\n              <Button>Confirm</Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n        \n        <div className="h-screen bg-muted/20 rounded p-4">\n          <p>Background content (scroll should be locked when modal is open)</p>\n          {Array.from({\n          length: 50\n        }, (_, i) => <p key={i}>Scrollable content line {i + 1}</p>)}\n        </div>\n      </div>;\n  }\n}',...z.parameters?.docs?.source},description:{story:"Accessibility Features\nDemonstration of accessibility features",...z.parameters?.docs?.description}}};const I=["BasicModal","ModalSizes","ModalPositions","ScrollableModal","DialogComponent","AlertDialogComponent","DrawerComponent","SheetComponent","ModalStacking","AccessibilityFeatures"];export{z as AccessibilityFeatures,w as AlertDialogComponent,k as BasicModal,O as DialogComponent,F as DrawerComponent,B as ModalPositions,M as ModalSizes,T as ModalStacking,D as ScrollableModal,A as SheetComponent,I as __namedExportsOrder,S as default};
