name: Deploy Storybook to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete
concurrency:
  group: "pages-deployment"
  cancel-in-progress: false

# Grant GITHUB_TOKEN the permissions required to make a Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build component library
        working-directory: packages/evoke-ui-react
        run: |
          pnpm build
          pnpm type-check

      - name: Run tests
        working-directory: packages/evoke-ui-react
        run: pnpm test --run

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v3

      - name: Build Storybook
        working-directory: packages/evoke-ui-react
        run: |
          pnpm build-storybook --output-dir ../../storybook-static
        env:
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./storybook-static

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

      - name: Add deployment summary
        run: |
          echo "## ðŸš€ Storybook Deployment Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Live Documentation**: [${{ steps.deployment.outputs.page_url }}](${{ steps.deployment.outputs.page_url }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“Š Deployment Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: \`main\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Time**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "- **Components Documented**: All atomic, molecular components" >> $GITHUB_STEP_SUMMARY
          echo "- **Design Tokens**: Complete OKLCH color system" >> $GITHUB_STEP_SUMMARY