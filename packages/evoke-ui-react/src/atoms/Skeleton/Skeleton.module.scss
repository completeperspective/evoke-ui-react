/**
 * Skeleton Component Styles
 * Loading placeholder animations
 */
@use '../../styles/abstracts' as *;

.skeleton {
  @include component-base;
  
  position: relative;
  overflow: hidden;
  
  // Default skeleton background
  background: linear-gradient(
    90deg,
    oklch(var(--ui-color-muted)) 0%,
    oklch(var(--ui-color-muted) / 0.8) 50%,
    oklch(var(--ui-color-muted)) 100%
  );
  
  // Shimmer animation
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent 0%,
      oklch(var(--ui-color-background) / 0.6) 50%,
      transparent 100%
    );
    animation: shimmer 2s infinite;
  }
  
  // Static state (no animation)
  &.static {
    &::before {
      display: none;
    }
  }
  
  // Ensure accessibility
  &[role="status"] {
    // Screen reader will announce "Loading..."
  }
}

// Multi-line text skeleton container
.textLines {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  width: 100%;
  
  .skeleton {
    &.lastLine {
      // Last line is typically shorter
      max-width: 60%;
    }
  }
}

// Shimmer animation keyframes
@keyframes shimmer {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

// Pulse animation as fallback
@keyframes skeletonPulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.6;
  }
}

// Variant-specific styles
.skeleton {
  // Circle variant
  &[class*="rounded-full"] {
    aspect-ratio: 1;
  }
  
  // Card variant enhancements
  &[class*="rounded-lg"] {
    min-height: 8rem;
  }
  
  // Button variant
  &[class*="rounded-md"]:not([class*="rounded-lg"]) {
    min-width: 4rem;
  }
}

// Dark theme adjustments
@include dark {
  .skeleton {
    background: linear-gradient(
      90deg,
      oklch(var(--ui-color-muted)) 0%,
      oklch(var(--ui-color-muted) / 0.8) 50%,
      oklch(var(--ui-color-muted)) 100%
    );
    
    &::before {
      background: linear-gradient(
        90deg,
        transparent 0%,
        oklch(var(--ui-color-foreground) / 0.1) 50%,
        transparent 100%
      );
    }
  }
}

// Reduced motion preferences
@include reduced-motion {
  .skeleton {
    &::before {
      animation: skeletonPulse 2s infinite;
    }
  }
}

// High contrast mode support
@include high-contrast {
  .skeleton {
    background: repeating-linear-gradient(
      45deg,
      transparent,
      transparent 2px,
      currentColor 2px,
      currentColor 4px
    );
    opacity: 0.3;
    
    &::before {
      display: none;
    }
  }
}

// Print styles
@media print {
  .skeleton {
    background: #f0f0f0 !important;
    
    &::before {
      display: none;
    }
  }
}

// Size-specific adjustments
.skeleton {
  // Small skeleton minimum dimensions
  &.h-4 {
    min-width: 2rem;
  }
  
  // Medium skeleton minimum dimensions
  &.h-6 {
    min-width: 3rem;
  }
  
  // Large skeleton minimum dimensions
  &.h-8 {
    min-width: 4rem;
  }
  
  // Extra large skeleton minimum dimensions
  &.h-12 {
    min-width: 6rem;
  }
}

// Responsive adjustments
@include sm {
  .textLines {
    gap: 0.375rem;
  }
}

@include md {
  .textLines {
    gap: 0.5rem;
  }
}

// Animation performance optimizations
.skeleton {
  // Use GPU acceleration
  will-change: transform;
  
  &::before {
    will-change: transform;
    transform: translateX(0);
  }
}

// Container query support for adaptive sizing
@container (max-width: 300px) {
  .textLines {
    gap: 0.25rem;
    
    .skeleton {
      &.lastLine {
        max-width: 70%;
      }
    }
  }
}