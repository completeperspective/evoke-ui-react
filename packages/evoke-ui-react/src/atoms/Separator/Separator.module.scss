/**
 * Separator Component Styles - Enhanced Visual Design
 * Elegant, sophisticated visual dividers with refined aesthetics
 */
@use '../../styles/abstracts' as *;

.separator {
  @include component-base;
  
  // Enhanced transitions for variant changes
  transition: all var(--ui-duration-fast) var(--ui-easing-out);
  flex-shrink: 0;
  position: relative;
  
  // Enhanced default styling with subtle gradient
  background: linear-gradient(
    135deg,
    oklch(var(--ui-color-border) / 0.8) 0%,
    oklch(var(--ui-color-border) / 0.4) 50%,
    oklch(var(--ui-color-border) / 0.8) 100%
  );
  
  // Subtle shadow for depth
  box-shadow: 0 0 1px oklch(var(--ui-color-border) / 0.3);
}

// Labeled separator container
.labeledSeparator {
  @include component-base;
  
  display: flex;
  align-items: center;
  position: relative;
  
  // Horizontal labeled separator
  &.horizontal {
    flex-direction: row;
    width: 100%;
    
    .separator {
      flex: 1;
    }
    
    .label {
      padding: 0 var(--ui-spacing-md);
      white-space: nowrap;
    }
  }
  
  // Vertical labeled separator
  &.vertical {
    flex-direction: column;
    height: 100%;
    
    .separator {
      flex: 1;
    }
    
    .label {
      padding: var(--ui-spacing-md) 0;
      writing-mode: vertical-rl;
      text-orientation: mixed;
    }
  }
}

// Label styling
.label {
  @include component-base;
  
  font-size: var(--ui-font-size-sm);
  font-weight: var(--ui-font-weight-medium);
  color: oklch(var(--ui-color-muted-foreground));
  background-color: oklch(var(--ui-color-background));
  
  // Better text rendering
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  
  // Ensure text doesn't break
  user-select: none;
  
  // Smooth transitions
  transition: color var(--ui-duration-fast) var(--ui-easing-out);
}

// Dark theme adjustments
@include dark {
  .label {
    background-color: oklch(var(--ui-color-background));
    color: oklch(var(--ui-color-muted-foreground));
  }
}

// High contrast mode support
@include high-contrast {
  .separator {
    // Ensure separators are visible in high contrast
    background-color: currentColor;
    opacity: 0.5;
  }
  
  .label {
    border: 1px solid currentColor;
    padding: 0.125rem 0.5rem;
  }
}

// Print styles
@media print {
  .separator {
    background-color: #ccc !important;
  }
  
  .label {
    background-color: white !important;
    color: black !important;
  }
}

// Responsive adjustments
@include sm {
  .labeledSeparator {
    &.horizontal {
      .label {
        padding: 0 var(--ui-spacing-sm);
        font-size: var(--ui-font-size-xs);
      }
    }
    
    &.vertical {
      .label {
        padding: var(--ui-spacing-sm) 0;
        font-size: var(--ui-font-size-xs);
      }
    }
  }
}

// Custom separator patterns
.separator {
  // Dotted pattern variant
  &.dotted {
    background: repeating-linear-gradient(
      to right,
      oklch(var(--ui-color-border)) 0px,
      oklch(var(--ui-color-border)) 2px,
      transparent 2px,
      transparent 4px
    );
    
    &[class*="w-"] {
      background: repeating-linear-gradient(
        to bottom,
        oklch(var(--ui-color-border)) 0px,
        oklch(var(--ui-color-border)) 2px,
        transparent 2px,
        transparent 4px
      );
    }
  }
  
  // Dashed pattern variant
  &.dashed {
    background: repeating-linear-gradient(
      to right,
      oklch(var(--ui-color-border)) 0px,
      oklch(var(--ui-color-border)) 4px,
      transparent 4px,
      transparent 8px
    );
    
    &[class*="w-"] {
      background: repeating-linear-gradient(
        to bottom,
        oklch(var(--ui-color-border)) 0px,
        oklch(var(--ui-color-border)) 4px,
        transparent 4px,
        transparent 8px
      );
    }
  }
}

// Gradient separator variants
.separator {
  &.gradient {
    background: linear-gradient(
      to right,
      transparent 0%,
      oklch(var(--ui-color-border)) 50%,
      transparent 100%
    );
    
    &[class*="w-"] {
      background: linear-gradient(
        to bottom,
        transparent 0%,
        oklch(var(--ui-color-border)) 50%,
        transparent 100%
      );
    }
  }
}

// Animation for dynamic separators
@keyframes separatorExpand {
  from {
    transform: scaleX(0);
  }
  to {
    transform: scaleX(1);
  }
}

@keyframes separatorExpandVertical {
  from {
    transform: scaleY(0);
  }
  to {
    transform: scaleY(1);
  }
}

// Optional animation classes
.separator {
  &.animate-expand {
    transform-origin: center;
    animation: separatorExpand var(--ui-duration-normal) var(--ui-easing-out);
    
    &[class*="w-"] {
      animation: separatorExpandVertical var(--ui-duration-normal) var(--ui-easing-out);
    }
    
    @include reduced-motion {
      animation: none;
    }
  }
}

// Better rendering for very thin separators
.separator {
  // Subpixel rendering
  &[class*="h-px"],
  &[class*="w-px"] {
    // Ensure crisp rendering
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
  }
}