/**
 * Design System Mixins
 * Reusable mixins for consistent component styling
 */

/**
 * Component Base
 * Standard base styles for all UI components
 */
@mixin component-base {
  box-sizing: border-box;
  border: 0 solid currentColor;
  margin: 0;
  padding: 0;
}

/**
 * Focus Ring
 * Accessible focus indicators following WCAG guidelines
 */
@mixin focus-ring($offset: 2px, $color: var(--ui-color-ring)) {
  &:focus-visible {
    outline: 2px solid oklch($color);
    outline-offset: $offset;
  }
}

/**
 * Focus Ring (Custom)
 * Focus ring with custom color and offset
 */
@mixin focus-ring-custom($color, $offset: 2px, $width: 2px) {
  &:focus-visible {
    outline: $width solid oklch($color);
    outline-offset: $offset;
  }
}

/**
 * Screen Reader Only
 * Hide content visually but keep it accessible to screen readers
 */
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/**
 * Button Reset
 * Remove default button styles for custom buttons
 */
@mixin button-reset {
  @include component-base;
  background: transparent;
  border: none;
  cursor: pointer;
  font: inherit;
  color: inherit;
  text-decoration: none;
  appearance: none;

  &:disabled {
    cursor: not-allowed;
  }
}

/**
 * Interactive Element
 * Base styles for interactive elements (buttons, links, etc.)
 */
@mixin interactive {
  @include component-base;
  @include focus-ring;

  transition: all var(--ui-duration-fast) var(--ui-easing-out);
  cursor: pointer;
  user-select: none;

  &:disabled,
  &[aria-disabled='true'] {
    cursor: not-allowed;
    opacity: 0.5;
    pointer-events: none;
  }
}

/**
 * Text Truncation
 * Single line text truncation with ellipsis
 */
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/**
 * Multi-line Text Truncation
 * Truncate text to specified number of lines
 */
@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines;
  overflow: hidden;
  text-overflow: ellipsis;
}

/**
 * Clearfix
 * Clear floated elements (rarely needed with modern CSS)
 */
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

/**
 * Centered Container
 * Center content with maximum width and horizontal padding
 */
@mixin container($max-width: 1200px, $padding: var(--ui-space-4)) {
  width: 100%;
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
  padding-left: $padding;
  padding-right: $padding;
}

/**
 * Responsive Breakpoints
 * Mobile-first responsive design mixins
 */

// Small devices (landscape phones, 576px and up)
@mixin sm {
  @media (min-width: 576px) {
    @content;
  }
}

// Medium devices (tablets, 768px and up)
@mixin md {
  @media (min-width: 768px) {
    @content;
  }
}

// Large devices (desktops, 992px and up)
@mixin lg {
  @media (min-width: 992px) {
    @content;
  }
}

// Extra large devices (large desktops, 1200px and up)
@mixin xl {
  @media (min-width: 1200px) {
    @content;
  }
}

// Extra extra large devices (larger desktops, 1400px and up)
@mixin xxl {
  @media (min-width: 1400px) {
    @content;
  }
}

/**
 * Custom Breakpoint
 * Create custom media queries
 */
@mixin breakpoint($size) {
  @media (min-width: $size) {
    @content;
  }
}

/**
 * Dark Theme
 * Apply styles only in dark theme
 * Usage: @include dark { .selector { styles } }
 */
@mixin dark {
  .dark {
    @content;
  }

  @media (prefers-color-scheme: dark) {
    @content;
  }
}

/**
 * Light Theme
 * Apply styles only in light theme (default)
 * Usage: @include light { .selector { styles } }
 */
@mixin light {
  :root:not(.dark) {
    @content;
  }

  @media (prefers-color-scheme: light) {
    @content;
  }
}

/**
 * Reduced Motion
 * Respect user's motion preferences
 */
@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

/**
 * High Contrast
 * Enhanced styles for high contrast mode
 */
@mixin high-contrast {
  @media (prefers-contrast: high) {
    @content;
  }
}

/**
 * Glass Effect
 * Modern glassmorphism effect
 */
@mixin glass($opacity: 0.1, $blur: 10px) {
  background: rgba(255, 255, 255, $opacity);
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);

  @include dark {
    background: rgba(0, 0, 0, $opacity * 0.8);
  }
}

/**
 * Gradient Background
 * Create gradient backgrounds with theme support
 */
@mixin gradient(
  $direction: to right,
  $start-color: var(--ui-color-primary),
  $end-color: var(--ui-color-accent)
) {
  background: linear-gradient($direction, oklch($start-color), oklch($end-color));
}

/**
 * Card Style
 * Standard card appearance with theme support
 */
@mixin card($padding: var(--ui-space-6)) {
  @include component-base;

  background-color: oklch(var(--ui-color-card));
  color: oklch(var(--ui-color-card-foreground));
  border-radius: var(--ui-radius-lg);
  border: 1px solid oklch(var(--ui-color-border));
  box-shadow: var(--ui-shadow-sm);
  padding: $padding;
}

/**
 * Input Style
 * Standard input field appearance
 */
@mixin input-field {
  @include component-base;
  @include focus-ring;

  background-color: oklch(var(--ui-color-background));
  border: 1px solid oklch(var(--ui-color-border));
  border-radius: var(--ui-radius-md);
  color: oklch(var(--ui-color-foreground));
  font-family: inherit;
  font-size: var(--ui-font-size-sm);
  line-height: var(--ui-line-height-sm);
  padding: var(--ui-space-2) var(--ui-space-3);
  transition: all var(--ui-duration-fast) var(--ui-easing-out);
  width: 100%;

  &::placeholder {
    color: oklch(var(--ui-color-muted-foreground));
  }

  &:hover:not(:disabled) {
    border-color: oklch(var(--ui-color-ring));
  }

  &:focus {
    border-color: oklch(var(--ui-color-ring));
    outline: none;
    box-shadow: 0 0 0 1px oklch(var(--ui-color-ring));
  }

  &:disabled {
    background-color: oklch(var(--ui-color-muted));
    cursor: not-allowed;
    opacity: 0.6;
  }
}

/**
 * Loading State
 * Visual loading state for interactive elements
 */
@mixin loading {
  position: relative;
  pointer-events: none;

  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 1rem;
    height: 1rem;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin var(--ui-duration-slowest) linear infinite;
    transform: translate(-50%, -50%);
  }
}

/**
 * Enhanced Elevation System
 * Beautiful shadow combinations for depth and hierarchy
 */
@mixin elevation($level: 1) {
  @if $level == 0 {
    box-shadow: none;
  } @else if $level == 1 {
    box-shadow: 
      0 1px 3px 0 rgba(0, 0, 0, 0.1),
      0 1px 2px 0 rgba(0, 0, 0, 0.06);
  } @else if $level == 2 {
    box-shadow: 
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06);
  } @else if $level == 3 {
    box-shadow: 
      0 10px 15px -3px rgba(0, 0, 0, 0.1),
      0 4px 6px -2px rgba(0, 0, 0, 0.05);
  } @else if $level == 4 {
    box-shadow: 
      0 20px 25px -5px rgba(0, 0, 0, 0.1),
      0 10px 10px -5px rgba(0, 0, 0, 0.04);
  } @else if $level == 5 {
    box-shadow: 
      0 25px 50px -12px rgba(0, 0, 0, 0.25),
      0 0 0 1px rgba(255, 255, 255, 0.05);
  }

  @include dark {
    @if $level == 1 {
      box-shadow: 
        0 1px 3px 0 rgba(0, 0, 0, 0.4),
        0 1px 2px 0 rgba(0, 0, 0, 0.2);
    } @else if $level == 2 {
      box-shadow: 
        0 4px 6px -1px rgba(0, 0, 0, 0.4),
        0 2px 4px -1px rgba(0, 0, 0, 0.25);
    } @else if $level == 3 {
      box-shadow: 
        0 10px 15px -3px rgba(0, 0, 0, 0.4),
        0 4px 6px -2px rgba(0, 0, 0, 0.25);
    } @else if $level == 4 {
      box-shadow: 
        0 20px 25px -5px rgba(0, 0, 0, 0.4),
        0 10px 10px -5px rgba(0, 0, 0, 0.25);
    } @else if $level == 5 {
      box-shadow: 
        0 25px 50px -12px rgba(0, 0, 0, 0.8),
        0 0 0 1px rgba(255, 255, 255, 0.1);
    }
  }
}

/**
 * Enhanced Interactive States
 * Beautiful hover and active state transitions
 */
@mixin enhanced-interactive($hover-lift: true, $active-press: true) {
  @include interactive;
  transition: all var(--ui-duration-fast) var(--ui-easing-out);
  
  @if $hover-lift {
    &:hover:not(:disabled):not([aria-disabled="true"]) {
      transform: translateY(-2px);
      @include elevation(2);
      
      @include reduced-motion {
        transform: none;
        box-shadow: none;
      }
    }
  }
  
  @if $active-press {
    &:active:not(:disabled):not([aria-disabled="true"]) {
      transform: translateY(0);
      @include elevation(1);
      transition-duration: var(--ui-duration-instant);
      
      @include reduced-motion {
        transform: none;
        box-shadow: none;
      }
    }
  }
}

/**
 * Shimmer Animation
 * Beautiful loading animation for skeleton components
 */
@mixin shimmer($gradient-color: rgba(255, 255, 255, 0.3)) {
  position: relative;
  overflow: hidden;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: linear-gradient(
      90deg,
      transparent,
      $gradient-color,
      transparent
    );
    transform: translateX(-100%);
    animation: shimmer var(--ui-duration-slower) infinite;
  }
  
  @include dark {
    &::after {
      background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.1),
        transparent
      );
    }
  }
  
  @include reduced-motion {
    &::after {
      animation: pulse var(--ui-duration-slow) ease-in-out infinite;
    }
  }
}

/**
 * Gradient Border
 * Modern gradient border effect
 */
@mixin gradient-border(
  $width: 1px,
  $radius: var(--ui-radius-md),
  $gradient: linear-gradient(135deg, oklch(var(--ui-color-primary)), oklch(var(--ui-color-accent)))
) {
  position: relative;
  background: $gradient;
  border-radius: $radius;
  padding: $width;
  
  &::before {
    content: '';
    position: absolute;
    top: $width;
    left: $width;
    right: $width;
    bottom: $width;
    background: oklch(var(--ui-color-background));
    border-radius: calc($radius - $width);
    z-index: 1;
  }
  
  > * {
    position: relative;
    z-index: 2;
  }
}

/**
 * Pill Shape
 * Modern pill-shaped component styling
 */
@mixin pill {
  border-radius: 9999px;
  padding: var(--ui-space-1) var(--ui-space-3);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: var(--ui-font-size-sm);
  font-weight: var(--ui-font-weight-medium);
  line-height: 1;
  white-space: nowrap;
}

/**
 * Floating Action Button
 * Material Design inspired FAB styling
 */
@mixin fab {
  @include enhanced-interactive;
  @include elevation(3);
  
  border-radius: 50%;
  width: 3.5rem;
  height: 3.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.25rem;
  
  &:hover:not(:disabled) {
    @include elevation(4);
  }
  
  &:active:not(:disabled) {
    @include elevation(2);
  }
}

/**
 * Backdrop Blur
 * Modern glassmorphism effect with improved browser support
 */
@mixin backdrop-blur($blur: 10px, $opacity: 0.8) {
  backdrop-filter: blur($blur) saturate(180%);
  -webkit-backdrop-filter: blur($blur) saturate(180%);
  background-color: rgba(255, 255, 255, $opacity);
  
  @include dark {
    background-color: rgba(0, 0, 0, $opacity * 0.9);
  }
  
  @supports not (backdrop-filter: blur($blur)) {
    background-color: rgba(255, 255, 255, $opacity * 1.2);
    
    @include dark {
      background-color: rgba(0, 0, 0, $opacity * 1.1);
    }
  }
}

/**
 * Smooth Corners
 * Apple-style smooth corner radius
 */
@mixin smooth-corners($radius: var(--ui-radius-lg)) {
  border-radius: $radius;
  
  // Enhance with mask for smoother corners in supporting browsers
  @supports (mask: paint(smooth-corners)) {
    mask: paint(smooth-corners);
    border-radius: 0;
  }
}

/**
 * Enhanced Focus Ring
 * Beautiful, modern focus indicators
 */
@mixin enhanced-focus-ring($color: var(--ui-color-ring), $offset: 2px) {
  &:focus-visible {
    outline: 2px solid oklch($color);
    outline-offset: $offset;
    box-shadow: 
      0 0 0 4px oklch($color / 0.1),
      0 0 0 2px oklch($color);
    
    @include reduced-motion {
      box-shadow: 0 0 0 2px oklch($color);
    }
  }
}

/**
 * Animation Keyframes
 * Enhanced animation keyframes with smooth motion
 */
@keyframes spin {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes bounce {
  0%,
  100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: translateY(0);
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-0.5rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(1rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}
